Code Snippet:
class Solution {
    public int[] twoSum(int[] numbers, int target) {
        
        int[] res = new int[2];
        
        int n = numbers.length;
        int j = 0, low = 0, high = n - 1, mid = 0;
        
        //approach 1
        
        /*if(numbers.length == 2) {
            
            res[0] = 1;
            res[1] = 2;
            
            return res;
            
        }
        
        boolean flag = false;
        
        for(int i = 0; i< n - 1; i++) {
         
            low = i + 1;
            high = n - 1;
            
            j = target - numbers[i];
            
            while(low <= high) {
            
                mid = (low + high)/2;
            
                if(numbers[mid] == j) {
                    
                    res[0] = i + 1;
                    res[1] = mid + 1;
                    
                    flag = true;
                    
                    break;
                }
                else if(numbers[mid] > j) {
                    
                    high = mid - 1;
                    
                }
                else    low = mid + 1;
            
            }
            
            if(flag)
                break;
            
        }
        
        return res;*/
        
        //approach 2
        int sum = 0;
        
        res[0] = low + 1;
        res[1] = high + 1;
        
        while(low <= high) {
            
            sum = numbers[low] + numbers[high];
            
            mid = (low + high)/2;
            
            if(sum == target) {
                
                res[0] = low + 1;
                res[1] = high + 1;
                break;
                
            } else if( sum > target)
                high--;
            else low++;

        }
        
        return res;
    }
}
